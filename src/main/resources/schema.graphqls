enum QuantityUnit {
    UNIT,
    KG,
    G,
    L,
    OUNCE,
    ML,
    PINT,
    CUP,
    POUND
}

scalar Date

type Query {
    dayByDate(startDate: Date!, endDate: Date): [Day!]
    ingredients(name: String): [Ingredient!]
    dishes(id: ID): [Dish!]
    meals(id: ID): [Meal!]
}

type Mutation {
    addIngredient(name: String!, quantity: Float, unit: QuantityUnit = UNIT): Ingredient
    addDish(name: String!, ingredients: [String!], notes: String, cookingTime: Float): Dish
    addMeal(main: ID, sides: [ID!]!, name: String, notes: String): Meal
    addMealToDay(date: Date!, Meal: ID!, notes: String): Day
}

type Ingredient {
    name: String!
    quantity(unit: QuantityUnit = UNIT): Float
}

type Dish {
    id: ID
    name: String!
    ingredients: [Ingredient!]
    notes: String
    cookingTime: Float
}

type Meal {
    id: ID!
    name: String
    main: Dish!
    sides: [Dish!]
    notes: String
}

type Day {
    date: Date!
    meal: Meal!
    notes: String
}